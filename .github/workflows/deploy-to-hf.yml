name: Deploy to HF Space via API
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Python & deps
        run: |
          python -V
          pip install -q "huggingface_hub[hf_transfer]"

      - name: Upload with HfApi (verbose)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -e
          python - <<'PY'
          import os, traceback
          from huggingface_hub import HfApi, HfHubHTTPError

          token = os.getenv("HF_TOKEN")
          if not token or not token.startswith("hf_"):
              raise SystemExit("HF_TOKEN 缺失或格式不对（应以 hf_ 开头）")

          api = HfApi(token=token)

          # 1) 显示 token 属于谁
          print("whoami:", api.whoami())

          REPO_ID   = "bladevil/zhilv-ai-server"
          REPO_TYPE = "space"

          # 2) 确认空间存在 & 可写
          try:
              info = api.repo_info(REPO_ID, repo_type=REPO_TYPE)
              print("repo_info ok:", info.id)
          except HfHubHTTPError as e:
              print("repo_info error:", e)
              raise

          # 3) 上传（自动处理大文件为 LFS；可按需忽略目录）
          try:
              api.upload_folder(
                  repo_id=REPO_ID,
                  repo_type=REPO_TYPE,
                  folder_path=".",              # 如果你的代码在子目录，就改成那个目录名
                  path_in_repo=".",
                  commit_message="CI: sync from GitHub",
                  ignore_patterns=[
                      ".git/*", ".github/*", "__pycache__/*", "*.pyc"
                  ],
              )
              print("UPLOAD DONE")
          except Exception:
              traceback.print_exc()
              raise
          PY

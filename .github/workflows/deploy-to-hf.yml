name: Deploy to Hugging Face Space
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install huggingface_hub
        run: pip install -q "huggingface_hub[hf_transfer]"

      - name: Debug token & repo
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -e
          python - <<'PY'
          import os, sys
          from huggingface_hub import HfApi, HfHubHTTPError
          t = os.environ.get("HF_TOKEN")
          assert t and t.startswith("hf_"), "HF_TOKEN 缺失或格式不对（应以 hf_ 开头）"
          api = HfApi(token=t)
          print("✅ whoami:", api.whoami())
          try:
              files = api.list_repo_files("bladevil/zhilv-ai-server", repo_type="space")
              print("✅ 找到 Space，并可读取文件。当前文件数：", len(files))
          except HfHubHTTPError as e:
              print("❌ 无法访问 Space（不存在或无权限）:", e)
              sys.exit(1)
          PY

      - name: Upload to Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -e
          python - <<'PY'
          import os
          from huggingface_hub import HfApi
          api = HfApi(token=os.environ["HF_TOKEN"])
          api.upload_folder(
              repo_id="bladevil/zhilv-ai-server",
              repo_type="space",
              folder_path=".",          # 若你的代码在子目录，请改成那个目录名
              path_in_repo=".",
              commit_message="Sync from GitHub",
              ignore_patterns=[".git/*", ".github/*", "__pycache__/*", "*.pyc"]
          )
          print("✅ 上传完成，已触发 Space 构建。如仍无日志，请确认已添加 space.yaml 或 README 前置配置。")
          PY

name: Sync to Hugging Face Space (via git, with checks)
on:
  push:
    branches: [ "main" ]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo state
        run: |
          echo "Top-level files:"
          ls -la
          echo "Recent commits:"
          git log --oneline -n 3 || true

      - name: Configure git identity
        run: |
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Check HF access & push
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -e

          if [ -z "$HF_TOKEN" ]; then
            echo "❌ HF_TOKEN 未设置（GitHub → Settings → Secrets and variables → Actions）"
            exit 1
          fi

          # 1) 用 HF API 检查是否对这个 Space 有访问权限
          CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $HF_TOKEN" \
            https://huggingface.co/api/spaces/bladevil/zhilv-ai-server)
          echo "HF API check HTTP $CODE"
          if [ "$CODE" = "401" ] || [ "$CODE" = "403" ]; then
            echo "❌ Token 无效或无写权限：请用【bladevil】账号在 HF 生成 Write token，或把该账号加到 Space 的 Collaborators(Write)。"
            exit 1
          elif [ "$CODE" = "404" ]; then
            echo "❌ Space 路径错误或不存在：应为 bladevil/zhilv-ai-server"
            exit 1
          fi

          # 2) 通过 git 远端推送到 Space
          HF_REMOTE="https://bladevil:${HF_TOKEN}@huggingface.co/spaces/bladevil/zhilv-ai-server"
          git remote add hf "$HF_REMOTE" 2>/dev/null || git remote set-url hf "$HF_REMOTE"

          echo "Check remote connectivity (git ls-remote)…"
          git ls-remote hf || { echo "❌ 无法访问 hf 远端（通常是权限问题）"; exit 1; }

          echo "Push to hf main…"
          git push hf HEAD:main --force-with-lease
          echo "✅ 推送 OK。打开 Space 的 L
